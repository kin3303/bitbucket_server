
version: '3.3'

services:
  traefik:
    image: traefik:v2.3
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
      - ./traefik.yaml:/etc/traefik/traefik.yaml
    deploy:
      placement:
        constraints: [node.role==manager]

  bitbucket:
    image: atlassian/bitbucket-server:7.9
    labels:
      - "traefik.enable=true"
      # Routers 
      - "traefik.http.routers.bitbucket.rule=Host(`<YOUR_DOMAIN>`)"
      - "traefik.http.routers.bitbucket.service=bitbucket"
      - "traefik.http.routers.bitbucket.entrypoints=websecure"
      - "traefik.http.routers.bitbucket.tls.certresolver=myresolver" 
      # Services
      - "traefik.http.services.bitbucket.loadbalancer.server.port=7990"
    depends_on:
      - db
    volumes:
      - bitbucketdata:/var/atlassian/application-data/bitbucket 
      
  db:
    image: postgres:11
    volumes:
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_USER=bitbucketdb' 
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_DB=bitbucketdb'
      - 'POSTGRES_ENCODING=UTF8'
      - 'POSTGRES_ENCODING=UNICODE'
      - 'POSTGRES_COLLATE=C'
      - 'POSTGRES_COLLATE_TYPE=C'

  portainer:
    image: portainer/portainer:latest
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role==manager]
        
volumes: 
  bitbucketdata:
    external:
      name: bitbucket-data
  postgresqldata:
    external:
      name: postgresql-data
